% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnvSimCounts.R
\name{cnvSimCounts}
\alias{cnvSimCounts}
\title{Generate simulated molecule counts}
\usage{
cnvSimCounts(
  totalMolecules = 10000000L,
  interval = cnvSimInterval(),
  subject = "simulatedSubject",
  variantWidth = 1L,
  CN = c(0, 0.5, 1, 1.5, 2),
  cnProb = c(0.00025, 0.00025, 0.999, 0.00025, 0.00025),
  seed = NULL
)
}
\arguments{
\item{totalMolecules}{integer of length 1, the total number of molecules}

\item{interval}{data.table \link[=validObjects]{interval object} with
'captureProb' field, see details}

\item{subject}{subject name/identifier}

\item{variantWidth}{integer, gives the possible variant widths in contiguous
intervals, see details}

\item{CN}{numeric vector of possible copy numbers; 1.0 indicates diploid
state, see details}

\item{cnProb}{numeric vector of probabilities corresponding to the possible
copy states in 'CN'}

\item{seed}{integer, passed to \link[base:set.seed]{set.seed()}}
}
\description{
Generate simulated molecule counts
}
\details{
\code{cnvSimCounts} requires an \link[=validObjects]{interval object} with an
added field, 'captureProb' defining the multinomial probability distribution
for interval coverage.
In this multinomial distribution, a success at an interval indicates the
interval was covered by a sequencing molecule.

\code{cnvSimCounts} will simulate variable-width copy number variants, with
the possible widths (number of contiguous intervals) given by the
'variantWidth' parameter.
All variant widths are simulated at an equal probability.

The 'CN' parameter defines the possible copy states.
To simply the computations, the \code{mcCNV} package defines 1.0 as the
diploid state.
The "actual" copies are given by multiplying 'CN' by 2.
As such, all entries in the 'CN' parameter must be a multiple of 0.5.

We adjust the capture probabilities by multiplying the probability by the
simulated copy number.
For example, when the copy number is 1 (the diploid state), we do not wish
to adjust the probability.
However, if say 3 copies of the interval are present, the probability of
capturing that interval is increased by 1.5.

We have found, likely due to sequencing and mapping errors, even true
homozygous deletions can have a few reads.
We account for this by using the multiplier 0.001 for intervals with complete
deletions (copy number is 0.0).
}
\seealso{
cnvSimCounts cnvSimPool
}
